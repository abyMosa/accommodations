.InputOuter{
    position: relative;
    width: 100%;
    float: left;
    box-sizing: border-box;
    border: 1px solid #d9d9d9;
    padding: 0 12px;
    cursor: text;
    border-radius: 4px; 
    transition: all .2s ease-out;
    background-color: #fff;
    min-width: 230px;
}
.InputOuter:hover{
    border: 1px solid #bfbfbf;
}
.Wrapper{
    display: flex;
    -webkit-box-flex: 1;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    position: relative;
}
.Wrapper label{
    left: 0px;
    right: auto;
    position: absolute;
    height: 20px;
    line-height: 20px;
    top: 13px;
    max-width: 90%;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-transform-origin: top left;
    transform-origin: top left;
    white-space: nowrap;
    pointer-events: none;
    font-size: 15px;
    min-height: 8px;
    transition: all .2s ease-out;
}
.Wrapper select{
    background-color: transparent;
    border-style: none;
    margin-top: 13px;
    -webkit-box-flex: 1;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    padding: 8px 0 4px;
    max-width: 100%;
    width: 100%;
    max-height: 32px;
    outline: none;
    color:black;
    font-weight: 500;
    line-height: 20px;
    font-size: 14px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background: url('../../../assets/img/arrows.png') right 7px top 7px no-repeat;
    background-size: 7px;
}

.InputOuter.Active label,
.InputOuter.HasValue label{
    top: 10px;
    transform: translateY(-6px) scale(.85);
}
.InputOuter.Active label{
    color:  rgba(0,0,0,0.87);
}
.InputOuter.Active{
    border: 1px solid rgba(0,0,0,0.87);
}


.InputOuter.hasError, .InputOuter.hasError:hover, .InputOuter.hasError.Active{
    border: 1px solid #ff5252;
}
.InputOuter.hasError label, .InputOuter.hasError.Active label, .ErrorWrap{
    color: #ff5252;
}
.ErrorWrap{
    font-size: 93%;
    margin-top: 4px;
    display: block;
}
.ErrorWrap .ErrorMessage{
    visibility: hidden;
    transform: translateY(-100%);
    transition: all .2s ease-out;
    opacity: 0;
    margin-left: 12px;
}
.InputErrorWrap.hasError .ErrorWrap .ErrorMessage{
    visibility: visible;
    transform: translateY(0);
    opacity: 1;
}
.InputErrorWrap{
    display: flex;
    flex-direction: column;
}